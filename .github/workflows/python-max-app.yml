name: Py (max version) 3.10 Django testing

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: self-hosted
    env:
      SECRET_KEY: 'COMMIT_${SHORT_SHA}'

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: l2
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Set up Python dev headers
      run: sudo apt-get install python3.10-dev
    - name: Install mupdf
      run: sudo apt install libmupdf-dev
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - run: poetry env use $(which python3.10)
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Migrate
      run: |
        source .venv/bin/activate
        python3 manage.py migrate
    - name: Make migrations
      run: |
        source .venv/bin/activate
        python3 manage.py makemigrations
    - name: Migrate
      run: |
        source .venv/bin/activate
        python3 manage.py migrate
    - name: Run Tests
      run: |
        source .venv/bin/activate
        python3 manage.py test
